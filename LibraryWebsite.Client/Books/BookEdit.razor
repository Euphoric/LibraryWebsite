@page "/book-edit"
@page "/book-edit/{bookId}"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager NavigationManager
@attribute [Authorize(Policy = Policies.CanEditBooks)]

<h1>Add book</h1>

@if (Book == null)
{
    <div>Loading book...</div>
}
else
{
    <EditForm Model="@Book" class="form-group" OnValidSubmit="@Save">

        <label for="titleInput">Title</label>
        <InputText type="text" class="form-control" id="titleInput" @bind-Value="@Book.Title" />

        <label for="isbn13Input">Isbn13</label>
        <InputText type="text" class="form-control" id="isbn13Input" @bind-Value="@Book.Isbn13" />

        <label for="authorInput">Author</label>
        <InputText type="text" class="form-control" id="authorInput" @bind-Value="@Book.Author" />

        <label for="descriptionInput">Description</label>
        <InputTextArea type="text" class="form-control" id="descriptionInput" @bind-Value="@Book.Description" />

        <button id="book-save" type="submit" class="btn btn-primary">Save</button>
        <button id="book-cancel" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </EditForm>
}

@code {

    [Parameter]
    public String? BookId { get; set; }

    BookDto? Book { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (BookId != null)
        {
            Book = await Http.GetJsonAsync<BookDto>($"api/book/{BookId}");
        }
        else
        {
            Book = new BookDto();
        }

        await base.OnInitializedAsync();
    }

    private async Task Save()
    {
        Guid addedBookGuid;
        if (BookId == null)
        {
            addedBookGuid = await Http.PostJsonAsync<Guid>("api/book", Book);
        }
        else
        {
            var bookId = Book!.Id;
            await Http.PutAsJsonAsync($"api/book/{bookId}", Book);
            addedBookGuid = bookId;
        }

        NavigationManager.NavigateTo($"/book-list?bookChanged={addedBookGuid}");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/book-list");
    }

}
