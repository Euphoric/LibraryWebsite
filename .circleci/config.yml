version: 2.1
executors:
    docker-publisher:
      environment:
          IMAGE_NAME: radekfalhar/librarywebsite
      docker:
          - image: circleci/buildpack-deps:stretch
jobs:
  test_unit_dotnet:
    machine: true
    steps:
        - checkout
        - run:
            name: Build test image
            command: |
              docker build -t radekfalhar/librarywebsite_test:latest -f Dockerfile-test .
        - run:
            name: Run unit tests
            command: |
              docker run -v TestResults:/src/TestResults radekfalhar/librarywebsite_test unit_dotnet
        - store_artifacts:
            path: TestResults
            destination: TestResults
        - store_test_results:
            path: TestResults

  test_unit_angular:
    machine: true
    steps:
        - checkout
        - run:
            name: Build test image
            command: |
              docker build -t radekfalhar/librarywebsite_test_angular:latest -f Dockerfile-test-angular .
        - run:
            name: Run unit tests
            command: |
              docker run -v TestResults:/src/TestResults radekfalhar/librarywebsite_test_angular
        - store_artifacts:
            path: TestResults
            destination: TestResults
        - store_test_results:
            path: TestResults

  test_dotnet_database:
    machine: true
    steps:
        - checkout
        - run:
            name: Build test image
            command: |
              docker build -t radekfalhar/librarywebsite_test:latest -f Dockerfile-test .
        - run:
            name: Run database tests
            command: |
              docker-compose -f docker-compose.databasetest.yml up --build --abort-on-container-exit --exit-code-from database_test
        - store_artifacts:
            path: TestResults
            destination: TestResults
        - store_test_results:
            path: TestResults


# docker build inspired by https://circleci.com/blog/using-circleci-workflows-to-replicate-docker-hub-automated-builds/
  docker_build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest -f LibraryWebsite/Dockerfile .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  end_to_end_test:
    machine: true
    steps:
        - attach_workspace:
            at: /tmp/workspace
        - checkout
        - run:
            name: Load archived Docker image
            command: docker load -i /tmp/workspace/image.tar
        - run:
            name: Build test image
            command: |
              docker build -t radekfalhar/librarywebsite_test:latest -f Dockerfile-test .            
        - run:
            name: Run end-to-end tests
            command: |
              docker-compose -f docker-compose.endtoendtest.yml up --build --abort-on-container-exit --exit-code-from end_to_end_test
        - store_artifacts:
            path: TestResults
            destination: TestResults
        - store_test_results:
            path: TestResults

  docker_publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest

workflows:
  version: 2
  build_and_publish:
    jobs:
      - test_unit_dotnet
      - test_unit_angular
      - test_dotnet_database
      - docker_build
      - end_to_end_test:
          requires:
            - docker_build
      - docker_publish-latest:
          requires:
            - end_to_end_test
            - test_unit_dotnet
            - test_unit_angular
            - test_dotnet_database
          context: "Docker hub credentials"
          filters:
            branches:
              only: master