version: 2.1
executors:
    docker-publisher:
      environment:
          IMAGE_NAME: radekfalhar/librarywebsite
      docker:
          - image: circleci/buildpack-deps:stretch
jobs:
  test:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.0-buster

    steps:
      - checkout
      - run:
          name: Run Tests
          command: dotnet test -c Release --logger "trx"
      - run:
          name: Convert test results from trx to junit
          when: always
          command: |
              export PATH="$PATH:/root/.dotnet/tools"
              dotnet tool install -g trx2junit
              trx2junit **/TestResults/*.trx --output TestResults/dotnet
      - store_test_results:
          path: TestResults
      - store_artifacts:
          path: TestResults
          destination: TestResults

# docker build inspired by https://circleci.com/blog/using-circleci-workflows-to-replicate-docker-hub-automated-builds/
  docker_build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest -f LibraryWebsite/Dockerfile .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  docker_publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest

workflows:
  version: 2
  build_and_publish:
    jobs:
      - test
      - docker_build:
          requires:
            - test
      - docker_publish-latest:
          requires:
            - docker_build
          context: "Docker hub credentials"
          filters:
            branches:
              only: master